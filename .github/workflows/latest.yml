name: Bandit Scan

on: 
  push:
    branches:
      - master

jobs:
  Bandit:
    name: Bandit Scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2

      - name: Security check - Bandit
        uses: ioggstream/bandit-report-artifacts@v0.0.2
        with:
          project_path: .
          ignore_failure: true

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tabulate

      - name: Run Python script
        run: |
          import os
          from tabulate import tabulate
          
          def parse_file(file_path):
              data = []
              issue_dict = {}
              severity_ranking = {'High': 1, 'Medium': 2, 'Low': 3}
              with open(file_path, 'r') as file:
                  for line in file:
                      line = line.strip()
                      if line.startswith('Issue:'):
                          issue_dict['Issue'] = line.split(':', 1)[1].strip()
                      elif line.startswith('Severity:'):
                          severity_confidence = line.split(':', 1)[1].strip().split()
                          issue_dict['Severity'] = severity_confidence[0]
                          issue_dict['Severity Ranking'] = severity_ranking.get(issue_dict['Severity'], 4)
                      elif line.startswith('CWE:'):
                          issue_dict['CWE'] = line.split(':', 1)[1].strip()
                      elif line.startswith('Location:'):
                          issue_dict['Location'] = line.split(':', 1)[1].strip()
                          data.append(issue_dict)
                          issue_dict = {}
              data.sort(key=lambda x: x.get('Severity Ranking', 4))
              for issue in data:
                  del issue['Severity Ranking']
              return data

          def main():
              file_path = 'output/security_report.txt'
              data = parse_file(file_path)
              for i, row in enumerate(data, start=1):
                  row['S. No.'] = i
                  row['Issue'] = row['Issue']  # Add the 'Issue' column same as other columns
              print(tabulate(data, headers="keys", tablefmt="pipe"))
              if any(issue['Severity'] == 'High' for issue in data):
                  print("Check the code for the correction of security risk.")
                  os._exit(1)

          if __name__ == "__main__":
              main()
        shell: python
