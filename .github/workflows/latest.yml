name: Bandit Scan

on: 
  push:
    branches:
      - master
      

jobs:
  Bandit:
    name: Bandit Scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2

      - name: Security check - Bandit
        uses: ioggstream/bandit-report-artifacts@v0.0.2
        with:
          project_path: .
          ignore_failure: true

      - name: Security check report artifacts
        uses: actions/upload-artifact@v1
        with:
          name: Security report
          path: output/security_report.txt

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tabulate

      - name: Run Python script
        run: |
          import os
          from tabulate import tabulate

          def parse_file(file_path):
              data = []
              issue_dict = {}
              with open(file_path, 'r') as file:
                  for line in file:
                      line = line.strip()
                      if line.startswith('Issue:'):
                          issue_dict['Issue'] = line.split(':', 1)[1].strip()
                      elif line.startswith('Severity:'):
                          issue_dict['Severity'] = line.split(':', 1)[1].strip()
                      elif line.startswith('CWE:'):
                          issue_dict['CWE'] = line.split(':', 1)[1].strip()
                      elif line.startswith('Location:'):
                          issue_dict['Location'] = line.split(':', 1)[1].strip()
                          data.append(issue_dict)
                          issue_dict = {}
              return data

          def main():
              file_path = 'output/security_report.txt'
              data = parse_file(file_path)
              print(tabulate(data, headers="keys", tablefmt="pipe"))

          if __name__ == "__main__":
              main()
        shell: python

      - name: Check for security risks
        run: |
          if grep -q "HIGH" output/security_report.txt; then
            echo "Security risks found. Blocking PR. Artifact: ${{ github.server_url }}/${{ github.repository }}/actions/artifacts/$(< output/security_report.txt)"
            exit 1
          fi
